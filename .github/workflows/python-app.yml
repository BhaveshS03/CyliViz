# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  python_ver: '3.11'
  python_arch: 'x64'
  exe_path: './dist'
  spec: 'main.py'
  requirements: 'requirements.txt'
  upload_exe_with_name: 'CyliViz'
  options: --onefile, --name "CyliViz", --windowed, 

jobs:
  pyinstaller-build:
    runs-on: windows-latest
    steps:
    - name: (Install) python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ $python_ver }}
        architecture: ${{ $python_arch }}
    
    - name: (Install) python dev tools
      shell: bash
      run: python -m pip install pip wheel setuptools
    
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: (Install) dependencies
      if: $requirements != ''
      run: python -m pip install -r "${{ $requirements }}"
      shell: bash

    - name: (Install) pyinstaller
      shell: bash
      run: pip install pyinstaller
    
    - name: (Create) Executable
      shell: bash
      run: |
        pyinstaller \
          --clean \
          --distpath ${{ $exe_path }} \
          ${{ steps.mods.outputs.supported_options }} \
          "${{ $spec }}"
        
        echo "✔️ Executable created successfully at _'${{ $exe_path }}'_" >> $GITHUB_STEP_SUMMARY
        echo "  - Python version used: '${{ $python_ver }}'" >> $GITHUB_STEP_SUMMARY
        echo "  - Python architecture used: '${{ $python_arch }}'" >> $GITHUB_STEP_SUMMARY

    - name: (Upload) Executable
      id: artifact_upload
      if: $upload_exe_with_name != ''
      uses: actions/upload-artifact@v3
      with:
        name: ${{ $upload_exe_with_name }}
        path: ${{ $exe_path }}
    
    - name: (Upload) generated spec file - if .py
      if: endsWith($spec, '.py')
      uses: actions/upload-artifact@v3
      with:
        name: Generated spec file
        path: ${{ steps.mods.outputs.spec_name }}.spec

    - name: If executable upload success
      id: exe_uploading
      if: steps.artifact_upload.conclusion == 'success'
      shell: bash
      run: |
        echo "✔️ Executable **_(${{ $upload_exe_with_name }})_** uploaded successfully" >> $GITHUB_STEP_SUMMARY
        echo "uploaded='true'" >> $GITHUB_OUTPUT
    
    - name: If executable upload fails
      if: failure() && steps.artifact_upload.conclusion == 'failure'
      shell: bash
      run: |
        echo "::warning title=Failed-Upload::\
          Executable couldn't upload. \
          Check available storage at: 'settings > billing > Storage for Actions and Packages'."
